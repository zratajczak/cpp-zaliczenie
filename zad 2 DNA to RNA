#include <iostream>
using namespace std;

class DNAtoRNA {
private:
    string dna_sequence;
    string rna_sequence;

public:
    DNAtoRNA(const string& dna) : dna_sequence(dna) {
        transcribe();
    }

    void transcribe() {
        rna_sequence = dna_sequence;
        for (char& nucleotide : rna_sequence) {
            if (nucleotide == 'T') {
                nucleotide = 'U';
            }
        }
    }

    void printRNA() const {
        cout << rna_sequence << endl;
    }
};

int main() {
    string dna_sequence = "AGTTGATCTTCATACGTCGCGTTAGCGCCCTGAGGTCAGTTCGGGTTTCCATCAAATGGGGACGCGTAAGCTGCTAAGTTTATGTTCAGGTGGGGGGCCCCCTAAATTAATGCTGTTCAATAGGTGCCCGGCCTGACACCCCTGCCTGCTTGGATGAGCGAGCTAATCCCCTCCAACTAACTCTTCCAGACCATCGGACTGTCTCCAGACCCCGATCCTTGGTGTAAGTAAGGCCGTTTCGCCTGCGGCTAGAAATTGGTGGAGGACACGGCTATACCATCGAACTGACCCGGAGTATTCACGGCGGTTGATCCTTATCAGAAGGATCAAGATGAGATGGGTTTGAGCGTTGTTCGTTAAGTGTTTAAAAACGAGGTAAGAGGTTGGGCAGCCATTTCGCAGCCACGGGGTTGACCGCTGAGATCATTAGCCAATGTTTAAGCGAACGTTCGAGCCCTCTGGAACACCAGAGTAACTAAGGTGCTGCACAGGTAGCTGAGGACTCTGTCTCGCTCCCGGCAATCTCCAGGGGGGGAGATCGAGGATTGCTGTGTGGCGTCCCATCAACATGTCGCCGTGATGTTATATACGTCCGGTCTAAGGACCAGTGACCGTTCCTTACCTCCGAGGGGGACTCTGTTGATAGGAGACTGAATATCGGTGTCACTTAGCTCTGGAGGGTGAGCACAAGCGGTGAGCTGCATTACAGTCCGTCGACAACTCAGTACAAGCGGGCCAAATGGAACCGAGCAGGTTGTTGGGCGTTTCAGAGCTGTACTTCATGTCGAAGGGCTAAGGATATGCGCTTAGTGCAATGTGTCAGTAGCCCGACCGCTCCTCCGGGGTCAAATGATCTAGGATCAGCTACGCATGGTATGCCGCTGGTTGGACACTGCTCAAACTAGACTGAACCACTAGCGGGAGCAGATGCGTGATATTGACCCAGTTTGTTCCCGATAGTGTCGCGCGGCCTGCTGCGGTCATGAAGGAATTATA";

    DNAtoRNA rna(dna_sequence);
    rna.printRNA();

    return 0;
}
