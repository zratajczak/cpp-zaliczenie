#include <iostream>
#include <string>

class DNA
{
private:
    std::string s;
    std::string t;

public:
    DNA(const std::string &seq1, const std::string &seq2) : s(seq1), t(seq2) {}

    int computeHammingDistance()
    {
        if (s.length() != t.length())
        {
            throw std::invalid_argument("sekwencja musi być tej samej długości");
        }

        int distance = 0;
        for (size_t i = 0; i < s.length(); ++i)
        {
            if (s[i] != t[i])
            {
                ++distance;
            }
        }
        return distance;
    }
};

int main()
{
    std::string s = "TATGGGGATGGGTGCTTCGGTAGCACTGTACGTGCTAATGGGAACTAAGCTGTATTAGCAACACTACGGTGGGGGGGGGAAAAATCCGGTTTCGAAGTGTGTTGAACGGACCCTTTGAGAGAATCCCGAGCTATTTTATTCCCCGCTTTCAATGCCTTACCGACGAAGGTCTTACCTCTAGCAAAAATTTCAACACTCTCACTCGTAACTGCCTACAAATACAGTATTTCGGATAGCCTGAGGAAGGGTCTTGTTCCGTAGCCTCACCGCGGCTCAGACATATATCCTACAACCGTACCATTTTGGTATGGCTGGTACCATCCCATACCTAATAGGTACGGGCGTGCTAAAATCACCATAACATGTGTGTGCACCGCATGCCGTAGTTAGAACGGATCACTTATAGCTCAACGTTCCTTGCTAGTCCATTCCGCTCGGAAACTAACCGCCACATTCCATGCGGAGTGAAACTCATGCTACGATAGCCGGCTCGCCGCTGCTTGAAACTTCCTGAAGACCACTATGCAATGGAACATATGATTTGCCAGATCCGTATGCTGCTCTGCCTGTTTTATAAGATGGGAAGCGCTCTATTACCGATGACGTGTACCCCTGCTCAAGCGCTTAAGGCCTAAGCTGCGAGCGGCGTTGGTTGCCTCAAAGGGCGCATTAGTCACCGGATTGTAGATAATGACCCCGTTGATTTTTAAGGAACATCGGCCCGGGTTTATGCCATTGGGGCAGTGGCACCTACTACATACCGGTCTGATAAGCAAAAGCTTGTCCGCGGAAGCCCTGTTTCAGTGATGTAAGGTAGCGGGAAACAGAGATCGGAGGGACCGGGTCGCCGCACCCGGTGCAAATGTTAGTTTATTTGACCTCACAAGTACTAAAGTTCGTAGTACAGGAGCACGATGTAGGTTCGGCATCACAGAGTCGGTTGGCGTGCATATAAGGTATAATACGTCGCCGCGCGCCTTTGCCAGTGT";
    std::string t = "GTGAGCGTTACGTGGTTAATAAACCGGGGAGTTTCTGACAGGTAAACATCTGAGGTAAGCAGGGTATTCTGCTTTGGGCTAAAATCCATCGAGGCTGTAACCTTCGTAATCCCTATAAGAGAGTTTAGTACCCTCTTTGTAGCCGGTTTCTATAAGTCGGCTACGGACCTCGATGCAGTAGTAATAATTTACAAGGGGTCTATTGTTAGAGCATACTAAGAGAGCTTTTTGCCTAGCATGACCAACGTTTTTGTTGCGAGACACCAGCACCGCCAAGTCACAAACACCCTAAAAGAATCGTTTAGGCATATATGGGTCCCTCACCGCCGAATGAGGCATGGCCGCATTAAAACCCCCCATATGGGTGAGACCACGGCATTCCTCAGGCATAACTGAACCTTAAACGTCCAAGAATGCCTAGAATTCTATGACTTCACCCGCCTCGGCGGCACTCCAGAGAGGGTCTAAAACACATGCCTTCAAATGGGTCTGAACTCGGTGGCCATGTGTGTGGATGCACCGATCCAATCAAACGCGCGTTCTGCTACGTCCGTTGGTTGCTTTATGTGGCTTATAAGAGGGGGGTGACTGTTTAGGCCATGCCGTGTACTCCTGGTCCTGTACTTATATCGTATGCTTCGTTCGCCTTACCACCTCTCAAATGGAACAAATGTTCTTGAATTCTACATAAAAGCCTTTTTGAAAATAGTGGAACGAGGACCATGTTGAATCGACGTGGGGCAATGACACGGCCCACCAGTAGGGGACAGAAGTCAAATCTAATCAGAGTTGGCGCTGGCGACATGAAGTAAGGCTGCGGAAAGCCTAGAACGGGGGTACCGGGTAGACACGCGGGGCTTGACTGTCTTGTGGAATATCATCTGACGTGTCTAATCCCTTAATGCATGTGAAATGTGGCGGGTCGGGCATACCGGTACGACGCGGGTCAAGGTCAGGGCTGATTCACAACCCGCCAATTTGTTGATTGT";

    DNA dna(s, t);
    std::cout << dna.computeHammingDistance() << std::endl;

    return 0;
}
